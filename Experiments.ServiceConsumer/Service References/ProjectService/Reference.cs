//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Experiments.ServiceConsumer.ProjectService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Project", Namespace="http://schemas.datacontract.org/2004/07/Experiments.WCFServices")]
    [System.SerializableAttribute()]
    public partial class Project : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ArchivedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CostCentreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExpectedCompletionDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastModifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LockedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Experiments.ServiceConsumer.ProjectService.ProjectSkill> ProjectSkillsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] RowVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Archived {
            get {
                return this.ArchivedField;
            }
            set {
                if ((this.ArchivedField.Equals(value) != true)) {
                    this.ArchivedField = value;
                    this.RaisePropertyChanged("Archived");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CostCentre {
            get {
                return this.CostCentreField;
            }
            set {
                if ((object.ReferenceEquals(this.CostCentreField, value) != true)) {
                    this.CostCentreField = value;
                    this.RaisePropertyChanged("CostCentre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Created {
            get {
                return this.CreatedField;
            }
            set {
                if ((this.CreatedField.Equals(value) != true)) {
                    this.CreatedField = value;
                    this.RaisePropertyChanged("Created");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExpectedCompletionDate {
            get {
                return this.ExpectedCompletionDateField;
            }
            set {
                if ((this.ExpectedCompletionDateField.Equals(value) != true)) {
                    this.ExpectedCompletionDateField = value;
                    this.RaisePropertyChanged("ExpectedCompletionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastModified {
            get {
                return this.LastModifiedField;
            }
            set {
                if ((this.LastModifiedField.Equals(value) != true)) {
                    this.LastModifiedField = value;
                    this.RaisePropertyChanged("LastModified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Locked {
            get {
                return this.LockedField;
            }
            set {
                if ((this.LockedField.Equals(value) != true)) {
                    this.LockedField = value;
                    this.RaisePropertyChanged("Locked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Experiments.ServiceConsumer.ProjectService.ProjectSkill> ProjectSkills {
            get {
                return this.ProjectSkillsField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectSkillsField, value) != true)) {
                    this.ProjectSkillsField = value;
                    this.RaisePropertyChanged("ProjectSkills");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] RowVersion {
            get {
                return this.RowVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.RowVersionField, value) != true)) {
                    this.RowVersionField = value;
                    this.RaisePropertyChanged("RowVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProjectSkill", Namespace="http://schemas.datacontract.org/2004/07/Experiments.WCFServices")]
    [System.SerializableAttribute()]
    public partial class ProjectSkill : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Experiments.ServiceConsumer.ProjectService.Project ProjectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ProjectIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ProjectSkillIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Experiments.ServiceConsumer.ProjectService.Skill SkillField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SkillIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Experiments.ServiceConsumer.ProjectService.Project Project {
            get {
                return this.ProjectField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectField, value) != true)) {
                    this.ProjectField = value;
                    this.RaisePropertyChanged("Project");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProjectId {
            get {
                return this.ProjectIdField;
            }
            set {
                if ((this.ProjectIdField.Equals(value) != true)) {
                    this.ProjectIdField = value;
                    this.RaisePropertyChanged("ProjectId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ProjectSkillId {
            get {
                return this.ProjectSkillIdField;
            }
            set {
                if ((this.ProjectSkillIdField.Equals(value) != true)) {
                    this.ProjectSkillIdField = value;
                    this.RaisePropertyChanged("ProjectSkillId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Experiments.ServiceConsumer.ProjectService.Skill Skill {
            get {
                return this.SkillField;
            }
            set {
                if ((object.ReferenceEquals(this.SkillField, value) != true)) {
                    this.SkillField = value;
                    this.RaisePropertyChanged("Skill");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SkillId {
            get {
                return this.SkillIdField;
            }
            set {
                if ((this.SkillIdField.Equals(value) != true)) {
                    this.SkillIdField = value;
                    this.RaisePropertyChanged("SkillId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Skill", Namespace="http://schemas.datacontract.org/2004/07/Experiments.WCFServices")]
    [System.SerializableAttribute()]
    public partial class Skill : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ArchivedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastModifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Experiments.ServiceConsumer.ProjectService.ProjectSkill> ProjectSkillsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Archived {
            get {
                return this.ArchivedField;
            }
            set {
                if ((this.ArchivedField.Equals(value) != true)) {
                    this.ArchivedField = value;
                    this.RaisePropertyChanged("Archived");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Created {
            get {
                return this.CreatedField;
            }
            set {
                if ((this.CreatedField.Equals(value) != true)) {
                    this.CreatedField = value;
                    this.RaisePropertyChanged("Created");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastModified {
            get {
                return this.LastModifiedField;
            }
            set {
                if ((this.LastModifiedField.Equals(value) != true)) {
                    this.LastModifiedField = value;
                    this.RaisePropertyChanged("LastModified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Experiments.ServiceConsumer.ProjectService.ProjectSkill> ProjectSkills {
            get {
                return this.ProjectSkillsField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectSkillsField, value) != true)) {
                    this.ProjectSkillsField = value;
                    this.RaisePropertyChanged("ProjectSkills");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Version {
            get {
                return this.VersionField;
            }
            set {
                if ((object.ReferenceEquals(this.VersionField, value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ProjectService.IProjectsService")]
    public interface IProjectsService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectsService/GetAllProjects", ReplyAction="http://tempuri.org/IProjectsService/GetAllProjectsResponse")]
        System.Collections.Generic.List<Experiments.ServiceConsumer.ProjectService.Project> GetAllProjects();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectsService/GetAllProjects", ReplyAction="http://tempuri.org/IProjectsService/GetAllProjectsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Experiments.ServiceConsumer.ProjectService.Project>> GetAllProjectsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectsService/GetProjectById", ReplyAction="http://tempuri.org/IProjectsService/GetProjectByIdResponse")]
        Experiments.ServiceConsumer.ProjectService.Project GetProjectById(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectsService/GetProjectById", ReplyAction="http://tempuri.org/IProjectsService/GetProjectByIdResponse")]
        System.Threading.Tasks.Task<Experiments.ServiceConsumer.ProjectService.Project> GetProjectByIdAsync(long id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProjectsServiceChannel : Experiments.ServiceConsumer.ProjectService.IProjectsService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProjectsServiceClient : System.ServiceModel.ClientBase<Experiments.ServiceConsumer.ProjectService.IProjectsService>, Experiments.ServiceConsumer.ProjectService.IProjectsService {
        
        public ProjectsServiceClient() {
        }
        
        public ProjectsServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProjectsServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProjectsServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProjectsServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<Experiments.ServiceConsumer.ProjectService.Project> GetAllProjects() {
            return base.Channel.GetAllProjects();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Experiments.ServiceConsumer.ProjectService.Project>> GetAllProjectsAsync() {
            return base.Channel.GetAllProjectsAsync();
        }
        
        public Experiments.ServiceConsumer.ProjectService.Project GetProjectById(long id) {
            return base.Channel.GetProjectById(id);
        }
        
        public System.Threading.Tasks.Task<Experiments.ServiceConsumer.ProjectService.Project> GetProjectByIdAsync(long id) {
            return base.Channel.GetProjectByIdAsync(id);
        }
    }
}
